name: Full CDK Deploy (Backend + Frontend)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '22'

    # Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # Install dependencies for frontend
    - name: Install Frontend Dependencies
      run: npm install
      working-directory: frontend


    # Build the frontend React app
    - name: Build React App
      run: |
        npm run build
        ls -la
      working-directory: frontend
    
    - name: Debug Build Directory Permissions
      run: |
        echo "Checking file permissions..."
        ls -lah
        echo "Checking ownership..."
        ls -ld build
        echo "Checking who can write to build directory..."
        test -w build && echo "✅ Write access exists" || echo "❌ No write access"
      working-directory: frontend
    
    - name: Fix Build Directory Permissions
      run: sudo chown -R $USER:$USER build
      working-directory: frontend
    
    - name: Verify Build Directory
      run: |
        if [ ! -d "./build" ]; then 
          echo "Build directory not found! Exiting.";
          exit 1;
        fi
      working-directory: frontend
    
    - name: Install CDK and Dependencies
      run: |
        npm install
        npm install --save-dev aws-cdk
      working-directory: frontend/cdk

    - name: Deploy Infrastructure and Fetch CloudFront IP
      run: |
        # Run CDK deploy and extract CloudFront URL
        CLOUDFRONT_URL=$(npm run cdk deploy -- --require-approval never | tee /dev/tty | awk '/ReactAppCdkStack.CloudFrontURL/ {print $NF}')

        if [[ -z "$CLOUDFRONT_URL" ]]; then
          echo "❌ CloudFront URL not found!"
          exit 1
        fi

        # Fetch CloudFront IP
        CLOUDFRONT_IP=$(dig +short $CLOUDFRONT_URL | head -n 1)

        if [[ -z "$CLOUDFRONT_IP" ]]; then
          echo "❌ Failed to fetch CloudFront IP!"
          exit 1
        fi

        # Save variables to GitHub environment
        echo "✅ CloudFront URL: https://$CLOUDFRONT_URL"
        echo "CLOUDFRONT_URL=$CLOUDFRONT_URL" >> $GITHUB_ENV

        echo "✅ CloudFront IP: $CLOUDFRONT_IP"
        echo "allowedip=$CLOUDFRONT_IP/32" >> $GITHUB_ENV
      working-directory: frontend/cdk

    - name: Invalidate CloudFront Cache
      run: |
        # Get the CloudFront Distribution ID based on the stored CLOUDFRONT_URL
        DISTRIBUTION_ID=$(aws cloudfront list-distributions \
          --query "DistributionList.Items[?DomainName=='$CLOUDFRONT_URL'].Id" --output text | head -n 1)
        
        if [[ -z "$DISTRIBUTION_ID" ]]; then
          echo "❌ CloudFront Distribution ID not found!"
          exit 1
        fi
        echo "✅ Extracted CloudFront Distribution ID: $DISTRIBUTION_ID"
        # Invalidate CloudFront Cache
        aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
        echo "✅ CloudFront cache invalidation triggered"


     # Install dependencies for backend
    - name: Install Backend Dependencies
      run: npm install
      working-directory: backend

    # Deploy Backend with CDK
    - name: Deploy Backend with CDK
      run: npx cdk deploy --require-approval never --context allowedip="${{ env.allowedip }}"
      working-directory: backend
